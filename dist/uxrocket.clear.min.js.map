{"version":3,"sources":["uxrocket.clear.js"],"names":["factory","define","amd","exports","require","jQuery","$","ux","i","rocketName","defaults","icon","clearAlso","onReady","onClear","onUpdate","onRemove","events","click","focus","input","keyup","paste","ns","prefix","rocket","data","name","wrap","classes","ready","visible","Clear","el","options","selector","$el","this","_instance","_name","_defaults","extend","init","prototype","uxrocket","addClass","utils","getClassname","hasWrapper","wrapper","setLayout","val","length","parent","callback","bindUIActions","handleClasses","classList","context","className","replace","charAt","substr","trim","removeClasses","removeClass","handleWrapper","is","addIcon","after","$icon","next","removeLayout","_this","Object","keys","unwrap","remove","pasted","on","onKeyup","siblings","e","onClick","target","cleanUp","unbindUIActions","off","preventDefault","update","destroy","fn","apply","_fn","exec","_fn_ns","split","_args","func","pop","window","getStringVariable","str","indexOf","chain","chainVal","which","clear","uxrclear","each","opts","filter","_opts","undefined","_uxrocket","removeData","version","settings","namespace"],"mappings":"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","file":"uxrocket.clear.min.js","sourcesContent":["/**\n * UX Rocket\n * jQuery based clear input/textarea action handler\n * @author Bilal Cinarli\n */\n\n(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof require === 'function') {\n        // Browserify\n        factory(require('jquery'));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function($) {\n    'use strict';\n\n    var ux, // local shorthand\n        i = 1,\n        rocketName = 'uxrClear',\n\n        defaults = {\n            icon: 'icon-cross',\n            clearAlso: null,\n\n            // callbacks\n            onReady: false,\n            onClear: false,\n            onUpdate: false,\n            onRemove: false\n        },\n        events = {\n            click: 'click.' + rocketName,\n            focus: 'focus.' + rocketName,\n            input: 'input.' + rocketName,\n            keyup: 'keyup.' + rocketName,\n            paste: 'paste.' + rocketName\n        },\n        ns = {\n            prefix: 'uxr-',\n            rocket: 'uxRocket',\n            data: rocketName,\n            name: 'clear',\n            wrap: 'uxr-plugin-wrap',\n            classes: {\n                wrap: 'wrap',\n                ready: 'ready',\n                icon: 'icon',\n                visible: 'icon-visible'\n            }\n        };\n\n    // Constructor Method\n    var Clear = function(el, options, selector) {\n        var $el = $(el);\n\n        this._instance = i;\n        this._name = rocketName;\n        this._defaults = defaults;\n\n        this.el = el;\n        this.$el = $el;\n\n        this.selector = selector;\n        this.options = $.extend(true, {}, defaults, options, $el.data());\n\n        i++;\n\n        this.init();\n    };\n\n    $.extend(Clear.prototype, {\n        init: function() {\n            var uxrocket = this.$el.data(ns.rocket) || {};\n\n            // add ready class\n            this.$el.addClass(utils.getClassname('ready'));\n\n            // register plugin data to rocket\n            uxrocket[ns.data] = {\n                hasWrapper: true,\n                wrapper: ns.wrap,\n                ready: utils.getClassname('ready'),\n                selector: this.selector,\n                options: this.options\n            };\n            this.$el.data(ns.rocket, uxrocket);\n\n            // set plugin layout\n            this.setLayout();\n\n            if (this.$el.val().length > 0) {\n                this.$el.parent().addClass(utils.getClassname('visible'));\n            }\n\n            utils.callback(this.options.onReady);\n\n            this.bindUIActions();\n        },\n        handleClasses: function() {\n            this.classList = this.$el.context.className.replace(utils.getClassname('ready'), '');\n\n            if (this.selector.charAt(0) === '.') {\n                this.classList = this.classList.replace(this.selector.substr(1), '');\n            }\n\n            this.classList += ns.wrap + ' ' + utils.getClassname('wrap') + ' ' + utils.getClassname('wrap') + '-' + this._instance;\n            this.classList = $.trim(this.classList);\n        },\n\n        removeClasses: function() {\n            this.$el.removeClass(utils.getClassname('ready'));\n            this.$el.parent().removeClass(this.classList.replace(ns.wrap, ''));\n        },\n\n        handleWrapper: function() {\n            this.$el.parent().is('.' + ns.wrap) ?\n                this.$el.parent().addClass(this.classList) :\n                this.$el.wrap('<span class=\"' + this.classList + '\"></span>');\n        },\n\n        addIcon: function() {\n            this.$el.after('<i class=\"' + utils.getClassname('icon') + '\"></i>');\n            this.$icon = this.$el.next('.' + utils.getClassname('icon'));\n        },\n\n        setLayout: function() {\n            this.handleClasses();\n            this.handleWrapper();\n            this.addIcon();\n        },\n\n        removeLayout: function() {\n            var _this = this,\n                uxrocket = _this.$el.data(ns.rocket);\n\n            // remove or reformat wrap\n            if (Object.keys && Object.keys(uxrocket).length === 1) {\n                _this.$el.unwrap();\n            }\n\n            else {\n                _this.$el.parent().removeClass(ns.wrap);\n            }\n\n            _this.$el.next('.' + utils.getClassname('icon')).remove();\n        },\n\n\n        bindUIActions: function() {\n            var _this = this;\n            var pasted = false;\n\n            _this.$el.on(events.keyup + ' ' + events.focus + ' ' + events.input, function() {\n                _this.onKeyup();\n            });\n\n            _this.$el.siblings('.' + utils.getClassname('icon')).on(events.click, function(e) {\n                _this.onClick(e);\n            });\n\n            _this.$el.on(events.paste, function() {\n                pasted = true;\n            });\n\n            $('body').on('DOMNodeRemoved', function(e) {\n                if (e.target === _this.el && !pasted) {\n                    _this.cleanUp();\n                } else {\n                    pasted = false;\n                }\n            });\n        },\n\n        unbindUIActions: function() {\n            this.$el.off('.' + rocketName);\n        },\n\n        onKeyup: function() {\n            var _this = this;\n\n            if (this.$el.val().length > 0) {\n                _this.$el.parent().addClass(utils.getClassname('visible'));\n            }\n            else {\n                _this.$el.parent().removeClass(utils.getClassname('visible'));\n            }\n        },\n\n        onClick: function(e) {\n            e.preventDefault();\n            this.$el.val('').parent().removeClass(utils.getClassname('visible'));\n\n            utils.callback(this.options.onClear);\n        },\n\n        update: function(options) {\n            return ux.update(this.el, options);\n        },\n\n        destroy: function() {\n            return ux.destroy(this.el);\n        },\n\n        // cleans wrapper, icons etc when element removed before plugin destroyed\n        cleanUp: function() {\n            $('.' + utils.getClassname('wrap') + '-' + this._instance).remove();\n        }\n    });\n\n    var utils = {\n        callback: function(fn) {\n            // if callback string is function call it directly\n            if (typeof fn === 'function') {\n                fn.apply(this);\n            }\n\n            // if callback defined via data-attribute, call it via new Function\n            else {\n                if (fn !== false) {\n                    var _fn = /([a-zA-Z._$0-9]+)(\\(?(.*)?\\))?/.exec(fn),\n                        _fn_ns = _fn[1].split('.'),\n                        _args = _fn[3] ? _fn[3] : '',\n                        func = _fn_ns.pop(),\n                        context = _fn_ns[0] ? window[_fn_ns[0]] : window;\n\n                    for (var i = 1; i < _fn_ns.length; i++) {\n                        context = context[_fn_ns[i]];\n                    }\n\n                    return context[func](_args);\n                }\n            }\n        },\n\n        getStringVariable: function(str) {\n            var val;\n            // check if it is chained\n            if (str.indexOf('.') > -1) {\n                var chain = str.split('.'),\n                    chainVal = window[chain[0]];\n\n                for (var i = 1; i < chain.length; i++) {\n                    chainVal = chainVal[chain[i]];\n                }\n\n                val = chainVal;\n            }\n\n            else {\n                val = window[str];\n            }\n\n            return val;\n        },\n\n        getClassname: function(which) {\n            return ns.prefix + ns.name + '-' + ns.classes[which];\n        }\n    };\n\n\n    ux = $.fn.clear = $.fn.uxrclear = $.uxrclear = function(options) {\n        var selector = this.selector;\n\n        return this.each(function() {\n            if ($.data(this, ns.data)) {\n                return;\n            }\n\n            // Bind the plugin and attach the instance to data\n            $.data(this, ns.data, new Clear(this, options, selector));\n        });\n    };\n\n    ux.update = function(el, options) {\n        var $el, opts;\n\n        // all elements will update according to new options\n        if (typeof options === 'undefined' && typeof el === 'object') {\n            $el = $('.' + utils.getClassname('ready'));\n            opts = el;\n        }\n        else {\n            $el = $(el);\n            opts = options;\n        }\n\n        $el.filter('input').each(function() {\n            var _this = $(this),\n                _instance = _this.data(ns.data),\n                _opts = _instance.options;\n\n            // update new options\n            _instance.options = $.extend(true, {}, _opts, opts);\n\n            // use onUpdate callback from original options\n            utils.callback(_opts.onUpdate);\n        });\n    };\n\n    ux.destroy = function(el) {\n        var $el = el !== undefined ? $(el) : $('.' + utils.getClassname('ready'));\n\n        $el.filter('input').each(function() {\n            var _this = $(this),\n                _instance = _this.data(ns.data),\n                _uxrocket = _this.data(ns.rocket);\n\n            // remove ready class\n            _instance.removeClasses();\n\n            // remove plugin events\n            _instance.unbindUIActions();\n\n            // remove layout\n            _instance.removeLayout();\n\n            // remove plugin data\n            _this.removeData(ns.data);\n\n            // remove uxRocket registry\n            delete _uxrocket[ns.data];\n            _this.data(ns.rocket, _uxrocket);\n\n            utils.callback(_instance.options.onRemove);\n        });\n    };\n\n// version\n    ux.version = '1.0.0';\n\n// default settings\n    ux.settings = defaults;\n    ux.namespace = ns;\n}));"]}